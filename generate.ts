import { grabAllChannels, loadAllChannels }  from './download.ts'
import { filterAndTransform, ChannelInfo } from './convert.ts'

let _ = await grabAllChannels();
let lines = await loadAllChannels();

const whiteList: Array<ChannelInfo> = [
    { channel: "5.USA.uk", niceName: "5 USA",  group: "UK"},
    { channel: "A.and.E.US.-.Eastern.Feed.us", niceName: "A&E",  group: "US"},
    { channel: "ABC.(WABC).New.York,.NY.us", niceName: "ABC New York",  group: "US"},
    { channel: "ACC.Network.us", niceName: "ACC Network",  group: "US"},
    { channel: "AMC.-.Eastern.Feed.us", niceName: "AMC",  group: "US"},
    { channel: "AXS.TV.USA.HD.us", niceName: "AXS TV",  group: "US"},
    { channel: "AdultSwim.com.Cartoon.Network.us", niceName: "Adult Swim Cartoon",  group: "US"},
    { channel: "Altitude.Sports.-.Denver.us", niceName: "Altitude Sports",  group: "US"},
    { channel: "American.Heroes.Channel.us", niceName: "American Heroes Channel",  group: "US"},
    { channel: "Animal.Planet.US.-.East.us", niceName: "Animal Planet",  group: "US"},
    { channel: "Astro.Cricket.my", niceName: "Astro Cricket Malaysia",  group: "MY"},
    { channel: "BBC.America.-.East.us", niceName: "BBC America",  group: "US"},
    { channel: "BBC.Four.HD.uk", niceName: "BBC Four UK",  group: "UK"},
    { channel: "BBC.World.News.North.America.(BBCWN).us", niceName: "BBC News",  group: "UK"},
    { channel: "BBCOne.uk", niceName: "BBC One UK",  group: "UK"},
    { channel: "BBC.Three.HD.uk", niceName: "BBC Three UK",  group: "UK"},
    { channel: "BBC.Two.HD.uk", niceName: "BBC Two UK",  group: "UK"},
    { channel: "BET.-.Eastern.Feed.us", niceName: "BET",  group: "US"},
    { channel: "Big.Ten.Network.us", niceName: "Big Ten Network",  group: "US"},
    { channel: "beINSports.us", niceName: "beIN Sports",  group: "US"},
    { channel: "Boomerang.us", niceName: "Boomerang",  group: "US"},
    { channel: "Bravo.USA.-.Eastern.Feed.us", niceName: "Bravo",  group: "US"},
    { channel: "C-SPAN.us", niceName: "C SPAN",  group: "US"},
    { channel: "CBC.(CBLT).Toronto,.ON.ca", niceName: "CBC",  group: "CA"},
    { channel: "CBS.Sports.Network.USA.us", niceName: "CBS Sports Network",  group: "US"},
    { channel: "CBS.(KCBS).Los.Angeles,.CA.us", niceName: "CBS LA",  group: "US"},
    { channel: "CBS.(WCBS).New.York,.NY.us", niceName: "CBS NY",  group: "US"},
    { channel: "CMT.US.-.Eastern.Feed.us", niceName: "CMT",  group: "US"},
    { channel: "CNBC.USA.us", niceName: "CNBC",  group: "US"},
    { channel: "CNN.us", niceName: "CNN",  group: "US"},
    { channel: "COZITV.us", niceName: "COZI TV",  group: "US"},
    { channel: "CTV2.Toronto,.ON.ca", niceName: "CTV2 CA",  group: "CA"},
    { channel: "CTV.(CFCN).Calgary,.AB.ca", niceName: "CTV CA",  group: "US"},
    { channel: "Cartoon.Network.USA.-.Eastern.Feed.us", niceName: "Cartoon Network",  group: "US"},
    { channel: "Channel4.uk", niceName: "Channel 4 UK",  group: "UK"},
    { channel: "Channel.5.uk", niceName: "Channel 5 UK",  group: "UK"},
    { channel: "Cinemax.-.Eastern.Feed.us", niceName: "Cinemax",  group: "US"},
    { channel: "CleoTV.us", niceName: "Cleo TV",  group: "US"},
    { channel: "Comedy.Central.(US).-.Eastern.Feed.us", niceName: "Comedy Central",  group: "US"},
    { channel: "Comet.us", niceName: "Comet",  group: "US"},
    { channel: "CookingChannel.us", niceName: "Cooking Channel",  group: "US"},
    { channel: "Court.TV.US.us", niceName: "Court TV",  group: "US"},
    { channel: "Crime.and.Investigation.Network.USA.HD.us", niceName: "Crime & Investigation",  group: "US"},
    { channel: "Dave(src01).uk", niceName: "Dave UK",  group: "UK"},
    { channel: "Destination.America.us", niceName: "Destination America",  group: "US"},
    { channel: "Discovery.Channel.(US).-.Eastern.Feed.us", niceName: "Discovery Channel",  group: "US"},
    { channel: "Discovery.Family.Channel.us", niceName: "Discovery Family",  group: "US"},
    { channel: "Discovery.Life.Channel.us", niceName: "Discovery Life",  group: "US"},
    { channel: "CTV.Speed.ca", niceName: "Discovery Velocity CA",  group: "US"},
    { channel: "Disney.-.Eastern.Feed.us", niceName: "Disney Channel",  group: "US"},
    { channel: "Disney.Junior.USA.-.East.us", niceName: "Disney Jr.",  group: "US"},
    { channel: "Disney.XD.USA.-.Eastern.Feed.us", niceName: "Disney XD",  group: "US"},
    { channel: "E!.Entertainment.USA.-.Eastern.Feed.us", niceName: "E! Entertainment",  group: "US"},
    { channel: "E4.HD.uk", niceName: "E4 Channel UK",  group: "UK"},
    { channel: "ESPN.Deportes.us", niceName: "ESPN Deportes",  group: "US"},
    { channel: "ESPN.us", niceName: "ESPN",  group: "US"},
    { channel: "ESPN2.us", niceName: "ESPN 2",  group: "US"},
    { channel: "ESPN.U.us", niceName: "ESPN U",  group: "US"},
    { channel: "ESPN.News.us", niceName: "ESPN News",  group: "US"},
    { channel: "Eurosport.1.HD.uk", niceName: "Eurosport 1 UK",  group: "UK"},
    { channel: "Eurosport.2.HD.uk", niceName: "Eurosport 2 UK",  group: "UK"},
    { channel: "FETV.(Family.Entertainment.Television).us", niceName: "Family Entertainment",  group: "US"},
    { channel: "Fox.Deportes.us", niceName: "Fox Deportes",  group: "US"},
    { channel: "FOX.Soccer.Plus.us", niceName: "FOX Soccer Plus",  group: "US"},
    { channel: "FoxLeague.au", niceName: "Fox League AU",  group: "AU"},
    { channel: "FoxSports503.au", niceName: "Fox Sports 503 AU",  group: "AU"},
    { channel: "FoxFooty.au", niceName: "Fox Footy AU",  group: "AU"},
    { channel: "FoxSports505.au", niceName: "Fox Sports 505 AU",  group: "AU"},
    { channel: "FoxSports506.au", niceName: "Fox Sports 506 AU",  group: "AU"},
    { channel: "FOX.(KTTV).Los.Angeles,.CA.us", niceName: "FOX LA",  group: "US"},
    { channel: "FOX.(WNYW).New.York,.NY.us", niceName: "FOX NY",  group: "US"},
    { channel: "FUSE.TV.-.Eastern.feed.us", niceName: "FUSE TV",  group: "US"},
    { channel: "FX.Movie.Channel.us", niceName: "FX Movie",  group: "US"},
    { channel: "FX.Networks.East.Coast.us", niceName: "FX Networks",  group: "US"},
   
];

let m3u = await filterAndTransform(lines, whiteList);
let x = await Deno.writeTextFile('index.m3u', m3u)
